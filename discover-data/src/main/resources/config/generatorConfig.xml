<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="config/init.properties"/>
    <!--mysql 连接数据库jar 这里选择自己本地位置-->
    <classPathEntry location="${class.path}"/>
    <context id="testTables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!--<plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"></plugin>-->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
            <!--生成的注释包含时间戳，默认为false-->
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.user}"
                        password="${jdbc.password}">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
           NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="${pojo.package}"
                            targetProject="${pojo.project}">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
            <!-- for MyBatis3 / MyBatis3Simple
            是否创建一个不可变的类，如果为true，
            那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类
            -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置
           如果maven工程只是单独的一个工程，targetProject="src/main/java"
           若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
           targetProject="ecps-manager-mapper"，下同-->
        <sqlMapGenerator targetPackage="${sqlmapper.package}"
                         targetProject="${sqlmapper.project}">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        <!-- targetPackage：mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="${java.mapper.package}"
                             targetProject="${java.mapper.project}">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>
        <!-- 指定数据库表 -->
        <table schema="" tableName="%">
            <generatedKey column="id" sqlStatement="Mysql"/>
        </table>
        <!--<table tableName="${table.tableName}" delimitIdentifiers="${table.delimitIdentifiers}" delimitAllColumns="${table.delimitAllColumns}" schema="${table.schema}"-->
               <!--domainObjectName="${table.domainObjectName}" enableCountByExample="${table.enableCountByExample}" enableUpdateByExample="${table.enableUpdateByExample}" enableDeleteByExample="${table.enableDeleteByExample}"-->
               <!--enableSelectByExample="${table.enableSelectByExample}" selectByExampleQueryId="${table.selectByExampleQueryId}">-->
            <!--<property name="useActualColumnNames" value="${table.property.useActualColumnNames}" />-->
        <!--</table>-->
        <!--<table schema="" tableName="t_comment">-->
            <!--<columnOverride column="comment_content" jdbcType="VARCHAR" javaType="java.lang.String" />-->
            <!--<columnOverride column="comment_reply" jdbcType="VARCHAR" javaType="java.lang.String" />-->
        <!--</table>-->
    </context>
</generatorConfiguration>